@model StaffAttendanceSystem.Models.AttendanceViewModel

@{
    ViewData["Title"] = "Teacher Attendance";
    Layout = null; // Remove any layout for this view
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Teacher Attendance</title>

    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Include Bootstrap Date Range Picker CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.css">
    <link rel="stylesheet" href="/css/style.css">
   
</head>
<body>
    <div class="container">
        <h2>Teacher Attendance</h2>

        <div class="text-center mt-3">
            <a asp-action="CreateTeacher" class="btn btn-success">Create New Teacher</a>
        </div>

        <!-- Week Picker -->
        <div class="form-group">
            <label for="weekPicker">Select Week:</label>
            <div class="input-group">
                <input type="text" id="weekPicker" class="form-control" placeholder="Select a week">
                <div class="input-group-append">
                    <span class="input-group-text">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
            </div>
        </div>

        <!-- Attendance Table -->
        <table class="table">
            <thead>
                <tr>
                    <th>Teacher ID<span class="icon-arrow"></span></th>
                    <th>Name<span class="icon-arrow"></span></th>
                    <th>Teacher Status<span class="icon-arrow"></span></th>
                    <th>InTime<span class="icon-arrow"></span></th>
                    <th>OutTime<span class="icon-arrow"></span></th>
                    <th>Reason<span class="icon-arrow"></span></th>
                    @for (var day = 0; day < 5; day++)
                    {
                        var date = Model.Monday.AddDays(day);
                        <th>@date.ToString("ddd, dd MMM")</th>
                    }
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                <!-- Render attendance details directly in the HTML -->
                @foreach (var teacher in Model.Teachers)
                {
                    var attendance = Model.Attendances.FirstOrDefault(a => a.TeacherId == teacher.Id);
                    <tr class="teacher-row">
                        <td>@teacher.Id</td>
                        <td>
                            <a href="@Url.Action("Details", "Teacher", new { id = teacher.Id })">
                                @teacher.FullName
                            </a>
                        </td>
                        <td>@teacher.Status</td>
                        @if (attendance != null)
                        {
                            <td>@attendance.InTime</td>
                            <td>@attendance.OutTime</td>
                            <td>@attendance.Reason</td>
                        }
                        else
                        {
                            <td>-</td>
                            <td>-</td>
                            <td>-</td>
                        }
                        @for (var day = 0; day < 5; day++)
                        {
                            var date = Model.Monday.AddDays(day);
                            var dayAttendance = Model.Attendances.FirstOrDefault(a =>
                            a.TeacherId == teacher.Id && a.Date.Date == date.Date);
                            <td>
                                @if (dayAttendance != null)
                                {
                                    @if (dayAttendance.Status == AttendanceStatus.Present)
                                    {
                                        <span class="text-success">Present</span>
                                    }
                                    else if (dayAttendance.Status == AttendanceStatus.Absent)
                                    {
                                        <span class="text-danger">Absent</span>
                                    }
                                    else
                                    {
                                        <span>---</span>
                                    }
                                }
                                else
                                {
                                    <span>---</span>
                                }
                            </td>
                        }

                        <td>
                            @if (attendance != null)
                            {
                                <a href="@Url.Action("Edit", "TeacherAttendance", new { id = attendance.AttendanceId})">Edit</a>
                            }
                        </td>

                        <td>
                            @if (attendance != null)
                            {
                                <form method="post" action="/api/delete/@teacher.Id" onsubmit="return confirm('Are you sure you want to delete this teacher and their attendance details?')">
                                    <input type="hidden" name="teacherId" value="@teacher.Id" />
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            }


                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Include Bootstrap and jQuery JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Include Bootstrap Date Range Picker JS -->
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize week picker
            $('#weekPicker').daterangepicker({
                opens: 'left',
                showWeekNumbers: true,
                locale: {
                    format: 'YYYY-MM-DD',
                    separator: ' - ',
                    applyLabel: 'Apply',
                    cancelLabel: 'Cancel',
                    weekLabel: 'W',
                    customRangeLabel: 'Custom Range'
                },
                ranges: {
                    'This Week': [moment().startOf('isoWeek'), moment().endOf('isoWeek')],
                }
            });

            // Add event listener for week picker change
            $('#weekPicker').on('apply.daterangepicker', function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');

                // Construct the action URL with query parameters
                var actionUrl = `/api/getDetails?startDate=${startDate}&endDate=${endDate}`;

                // Navigate to the API action URL
                window.location.href = actionUrl;
            });
        });
    </script>
</body>
</html>
