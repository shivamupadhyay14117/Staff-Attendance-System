@model StaffAttendanceSystem.Models.AttendanceViewModel

@{
    ViewData["Title"] = "Teacher Attendance";
    Layout = null; // Remove any layout for this view
}

<!DOCTYPE html>



<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Teacher Attendance</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Include Bootstrap Date Range Picker CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    @*   <link rel="stylesheet" href="/css/style.css">*@
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            min-height: 100vh;
            background: url(/css/images/html_table.jpg) center / cover;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        main.table {
            width: 82vw;
            height: 90vh;
            background-color: #fff5;
            backdrop-filter: blur(7px);
            box-shadow: 0 .4rem .8rem #0005;
            border-radius: .8rem;
            overflow: hidden;
        }

        h2 {
            text-align: center; /* Heading in middle */
        }

        .table__header {
            width: 100%;
            height: 10%;
            background-color: #fff4;
            padding: .8rem 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .table__header .input-group {
                width: 35%;
                height: 100%;
                background-color: #fff5;
                padding: 0 .8rem;
                border-radius: 2rem;
                display: flex;
                justify-content: center;
                align-items: center;
                transition: .2s;
            }

                .table__header .input-group:hover {
                    width: 45%;
                    background-color: #fff8;
                    box-shadow: 0 .1rem .4rem #0002;
                }

                .table__header .input-group i {
                    font-size: 20px;
                    color: #3498db;
                }

                .table__header .input-group input {
                    width: 100%;
                    padding: 0 .5rem 0 .3rem;
                    background-color: transparent;
                    border: none;
                    outline: none;
                }

        .table__body {
            width: 95%;
            max-height: calc(89% - 1.6rem);
            background-color: #fffb;
            margin: .8rem auto;
            border-radius: .6rem;
            overflow: auto;
            overflow: overlay;
        }

            .table__body::-webkit-scrollbar {
                width: 0.5rem;
                height: 0.5rem;
            }

            .table__body::-webkit-scrollbar-thumb {
                border-radius: .5rem;
                background-color: #0004;
                visibility: hidden;
            }

            .table__body:hover::-webkit-scrollbar-thumb {
                visibility: visible;
            }

        .status {
            border-radius: 20rem;
            text-align: center;
            padding: 4px 10px; /* Add padding to adjust the background color size */
        }


            .status.delivered {
                background-color: #86e49d;
                color: #006b21;
            }

            .status.cancelled {
                background-color: #d893a3;
                color: #b30021;
            }

            .status.pending {
                background-color: #ebc474;
            }

            .status.shipped {
                background-color: #6fcaea;
            }

        /* Custom styles for the search form */
        .search-form {
            display: flex;
            align-items: center;
            width: 95%;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 25px;
            padding: 5px 15px;
            transition: width 0.3s, background-color 0.3s;
        }

            .search-form:hover {
                width: 120%;
                background-color: rgba(255, 255, 255, 0.3);
            }

            .search-form input[type="search"] {
                border: none;
                background: none;
                outline: none;
                flex: 1;
                padding: 5px;
                color: #fff;
            }

        /* Styles for the Create New Teacher button */
        .btn-success {
            background-color: #4CAF50;
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn-success:hover {
                background-color: #45a049;
            }

        /* Week Picker Input Style */
        #weekPicker {
            border: none;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 25px;
            padding: 10px 15px;
            color: #fff;
            outline: none;
            transition: background-color 0.3s;
        }

            #weekPicker:hover {
                background-color: rgba(255, 255, 255, 0.3);
            }

        .create {
            text-align: end;
            padding-right: 30px;
            padding-bottom: 30px;
        }

        /* Make Name and Teacher Status column wider */
        .attendance-table th:nth-child(2),
        .attendance-table th:nth-child(3) {
            width: 150px;
        }
    </style>
</head>

<body>
    <main class="table">
        <h2>Teacher Attendance</h2>

        <div class="create text-center mt-3 weekpicker">
            <a asp-action="CreateTeacher" class="btn btn-success" style="position: absolute; top: 10px; right: 10px;">Create New Teacher</a>
        </div>


        <!-- Week Picker -->
        <div class="container">
            <div class="row">
                <div class="col-sm-6 form-group">
                    <div class="input-group search" id="DateDemo">
                        <!-- Calendar Icon -->
                        <input type='text' id='weekPicker' placeholder="Select Week" />
                    </div>
                </div>
                <!-- Search Form -->
                <div style="padding-left: 350px;" class="col-sm-6 form-group">
                    <form class="search-form">
                        <input type="search" id="searchInput" placeholder="Search Teacher..."
                               class="form-control search-input">
                    </form>
                </div>
            </div>
        </div>

        <section class="table__body">
            <!-- Attendance Table -->
            <table class="attendance-table">
                <thead>
                    <tr>
                        <th>Teacher ID<span class="icon-arrow"></span></th>
                        <th style="width: 150px;">Name<span class="icon-arrow"></span></th>
                        <th style="width: 150px;">Teacher Status<span class="icon-arrow"></span></th>
                        <th>InTime<span class="icon-arrow"></span></th>
                        <th>OutTime<span class="icon-arrow"></span></th>
                        <th>Reason<span class="icon-arrow"></span></th>
                        @for (var day = 0; day < 5; day++)
                        {
                            var date = Model.Monday.AddDays(day);
                            <th>@date.ToString("ddd, dd MMM")</th>
                        }
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Render attendance details directly in the HTML -->
                    @foreach (var teacher in Model.Teachers)
                    {
                        var attendance = Model.Attendances.FirstOrDefault(a => a.TeacherId == teacher.Id);
                        <tr class="teacher-row">
                            <td>@teacher.Id</td>
               
                            <td style="width: 150px;">
                                <a href="@Url.Action("Details", "Teacher", new { id = teacher.Id })">
                                    <img style="width:40px; height:40px;border-radius:50px;" src="@teacher.ProfilePictureUrl" />
                                    @teacher.FullName
                                    
                                </a>
                               
                            </td>
                            
                            @if (@teacher.Status.ToString() == "Available")
                            {
                                <td>
                                    <p class="status delivered">@teacher.Status</p>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <p class="status cancelled">@teacher.Status</p>
                                </td>
                            }
                            @if (attendance != null)
                            {
                                <td>@attendance.InTime</td>
                                <td>@attendance.OutTime</td>
                                <td>@attendance.Reason</td>
                            }
                            else
                            {
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                            }
                            @for (var day = 0; day < 5; day++)
                            {
                                var date = Model.Monday.AddDays(day);
                                var dayAttendance = Model.Attendances.FirstOrDefault(a =>
                                a.TeacherId == teacher.Id && a.Date.Date == date.Date);
                                <td>
                                    @if (dayAttendance != null)
                                    {
                                        @if (dayAttendance.Status == AttendanceStatus.Present)
                                        {
                                            <span class="text-success">Present</span>
                                        }
                                        else if (dayAttendance.Status == AttendanceStatus.Absent)
                                        {
                                            <span class="text-danger">Absent</span>
                                        }
                                        else
                                        {
                                            <span>---</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>---</span>
                                    }
                                </td>
                            }
                            <td>
                                @if (attendance != null)
                                {
                                    <a href="@Url.Action("Edit", "TeacherAttendance", new { id = attendance.AttendanceId})">Edit</a>
                                }
                            </td>
                            <td>
                                @if (attendance != null)
                                {
                                    <form method="post" action="/api/delete/@teacher.Id" onsubmit="return confirm('Are you sure you want to delete this teacher and their attendance details?')">
                                        <input type="hidden" name="teacherId" value="@teacher.Id" />
                                        <button type="submit" class="btn btn-danger">Delete</button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </section>
        <!-- Include Bootstrap and jQuery JS -->
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

        <!-- Include Bootstrap Date Range Picker JS -->
        <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/moment.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.min.js"></script>

        <script>
            $(document).ready(function () {
                // Initialize week picker
                $('#weekPicker').daterangepicker({
                    opens: 'left',
                    showWeekNumbers: true,
                    locale: {
                        format: 'YYYY-MM-DD',
                        separator: ' - ',
                        applyLabel: 'Apply',
                        cancelLabel: 'Cancel',
                        weekLabel: 'W'
                    }
                });

                // Add event listener for week picker change
                $('#weekPicker').on('apply.daterangepicker', function (ev, picker) {
                    var startDate = picker.startDate.format('YYYY-MM-DD');
                    var endDate = picker.endDate.format('YYYY-MM-DD');

                    // Construct the action URL with query parameters
                    var actionUrl = `/api/getDetails?startDate=${startDate}&endDate=${endDate}`;

                    // Navigate to the API action URL
                    window.location.href = actionUrl;
                });

                // Add event listener for search input
                $('#searchInput').on('input', function () {
                    var searchText = $(this).val().toLowerCase();
                    $('.teacher-row').each(function () {
                        var teacherName = $(this).find('td:nth-child(2) a').text().toLowerCase();
                        if (teacherName.includes(searchText)) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                });
            });
        </script>
    </main>
</body>

</html>
